// [WARNING] This file is generated by running `$ qore codegen` on your root project, please do not edit

/// <reference types="@feedloop/qore-client" />
import { QoreSchema } from "@feedloop/qore-client";

declare module "@feedloop/qore-client" {
  type BrandTableRow = {
    id: string;
    name: string;
    description: string;
    product: { nodes: ProductTableRow[] };
  };

  type CityTableRow = {
    id: string;
    name: string;
    longitude: string;
    latitude: string;
    member2: { nodes: Member2TableRow[] };
    product4: { nodes: Product4TableRow[] };
  };

  type CategoryTableRow = {
    id: string;
    name: string;
    description: string;
    product1: { nodes: Product1TableRow[] };
    productsCount: number;
  };

  type BasketTableRow = {
    id: string;
    name: string;
    idMembar: { nodes: IdMembarTableRow[] };
    idProduct: { nodes: IdProductTableRow[] };
    totalHari: number;
    ongkir: number;
    allTotal: number;
    totalHargaSewa: number;
  };

  type MemberTableRow = {
    id: string;
    email: string;
    role: { id: string; displayField: string };
    password: string;
    basket: { nodes: BasketTableRow[] };
    alamat: string;
    kodePoss: number;
    product3: { nodes: Product3TableRow[] };
    gender: string;
    phone: number;
    profession: string;
    ktpImage: string;
    cityId: CityIdTableRow;
    fullName: string;
  };

  type ProductTableRow = {
    id: string;
    name: string;
    description: string;
    brand: { nodes: BrandTableRow[] };
    category: CategoryTableRow;
    image: string;
    startDate: Date;
    endDate: Date;
    nameCategory: string;
    address: string;
    price: number;
    basket1: { nodes: Basket1TableRow[] };
    merchant: { nodes: MerchantTableRow[] };
    city: CityTableRow;
    statusProduct: string;
    categoryName: string;
    brandName: string;
  };

  type AllProductViewRow = {
    read: {
      id: string;
      name: string;
      brand: { nodes: BrandTableRow[] };
      category: CategoryTableRow;
      image: string;
      nameCategory: string;
      address: string;
      price: number;
      merchant: { nodes: MerchantTableRow[] };
      city: CityTableRow;
      description: string;
      startDate: Date;
      endDate: Date;
      statusProduct: string;
      categoryName: string;
      brandName: string;
    };
    write: {
      name: string;
      brand: string[];
      category: string[];
      image: string;
      nameCategory: string;
      address: string;
      price: number;
      merchant: string[];
      city: string[];
      description: string;
      startDate: Date;
      endDate: Date;
      statusProduct: string;
    };
    params: {};
    actions: {};
    forms: {};
  };

  type AllBrandViewRow = {
    read: {
      id: string;
      name: string;
      description: string;
    };
    write: {
      name: string;
      description: string;
    };
    params: {};
    actions: {};
    forms: {};
  };

  type AllCategoryViewRow = {
    read: {
      id: string;
      name: string;
      description: string;
      productsCount: number;
    };
    write: {
      name: string;
      description: string;
    };
    params: {};
    actions: {};
    forms: {};
  };

  type AllBasketViewRow = {
    read: {
      id: string;
      name: string;
      idMembar: { nodes: IdMembarTableRow[] };
      idProduct: { nodes: IdProductTableRow[] };
      totalHari: number;
      ongkir: number;
      allTotal: number;
      totalHargaSewa: number;
    };
    write: {
      name: string;
      idMembar: string[];
      idProduct: string[];
      totalHari: number;
      ongkir: number;
      allTotal: number;
      totalHargaSewa: number;
    };
    params: {};
    actions: {};
    forms: {};
  };

  type AllCityViewRow = {
    read: {
      id: string;
      name: string;
      longitude: string;
      latitude: string;
    };
    write: {
      name: string;
      longitude: string;
      latitude: string;
    };
    params: {};
    actions: {};
    forms: {};
  };

  type AllMemberViewRow = {
    read: {
      id: string;
      email: string;
      role: { id: string; displayField: string };
      password: string;
      alamat: string;
      kodePoss: number;
      gender: string;
      phone: number;
      profession: string;
      ktpImage: string;
      cityId: CityIdTableRow;
      fullName: string;
    };
    write: {
      email: string;
      password: string;
      alamat: string;
      kodePoss: number;
      gender: string;
      phone: number;
      profession: string;
      ktpImage: string;
      cityId: string[];
      fullName: string;
    };
    params: {};
    actions: {};
    forms: {};
  };

  type ProjectSchema = {
    allProduct: AllProductViewRow;
    allBrand: AllBrandViewRow;
    allCategory: AllCategoryViewRow;
    allBasket: AllBasketViewRow;
    allCity: AllCityViewRow;
    allMember: AllMemberViewRow;
  };
}
