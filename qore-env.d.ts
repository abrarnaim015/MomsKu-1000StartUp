// [WARNING] This file is generated by running `$ qore codegen` on your root project, please do not edit

/// <reference types="@feedloop/qore-client" />
import { QoreSchema } from "@feedloop/qore-client";

declare module "@feedloop/qore-client" {
  type BrandTableRow = {
    id: string;
    name: string;
    description: string;
    product: { nodes: ProductTableRow[] };
  };

  type CategoryTableRow = {
    id: string;
    name: string;
    description: string;
    product1: { nodes: Product1TableRow[] };
    productsCount: number;
  };

  type MemberTableRow = {
    id: string;
    email: string;
    role: { id: string; displayField: string };
    password: string;
  };

  type ProductTableRow = {
    id: string;
    name: string;
    description: string;
    brand: { nodes: BrandTableRow[] };
    category: CategoryTableRow;
    image: string;
    startDate: Date;
    endDate: Date;
    nameCategory: string;
    address: string;
    price: number;
  };

  type AllMemberViewRow = {
    read: {
      id: string;
      email: string;
      role: { id: string; displayField: string };
      password: string;
    };
    write: {
      email: string;
      password: string;
    };
    params: {};
    actions: {};
    forms: {};
  };

  type AllProductViewRow = {
    read: {
      id: string;
      name: string;
      brand: { nodes: BrandTableRow[] };
      category: CategoryTableRow;
      image: string;
      startDate: Date;
      endDate: Date;
      description: string;
      nameCategory: string;
      address: string;
      price: number;
    };
    write: {
      name: string;
      brand: string[];
      category: string[];
      image: string;
      startDate: Date;
      endDate: Date;
      description: string;
      nameCategory: string;
      address: string;
      price: number;
    };
    params: {};
    actions: {};
    forms: {};
  };

  type AllBrandViewRow = {
    read: {
      id: string;
      name: string;
      description: string;
    };
    write: {
      name: string;
      description: string;
    };
    params: {};
    actions: {};
    forms: {};
  };

  type AllCategoryViewRow = {
    read: {
      id: string;
      name: string;
      description: string;
      productsCount: number;
    };
    write: {
      name: string;
      description: string;
    };
    params: {};
    actions: {};
    forms: {};
  };

  type ProjectSchema = {
    allMember: AllMemberViewRow;
    allProduct: AllProductViewRow;
    allBrand: AllBrandViewRow;
    allCategory: AllCategoryViewRow;
  };
}
